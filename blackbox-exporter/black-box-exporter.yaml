---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-scraper
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - route.openshift.io
  resources:
  - routers/metrics
  - routers/federate
  verbs:
  - get
- apiGroups:
  - image.openshift.io
  resources:
  - registry/metrics
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - endpoints
  - pods
  - services
  - namespaces
  verbs:
  - list
  - get
  - watch
---
apiVersion: authorization.openshift.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-scraper
roleRef:
  name: prometheus-scraper
subjects:
- kind: ServiceAccount
  name: rhoai-monitoring-stack-prometheus
  namespace: redhat-ods-monitoring
---
# A dummy secret for oauth proxy(This will be created by the operator)
kind: Secret
apiVersion: v1
metadata:
  name: prometheus-proxy
  namespace: redhat-ods-monitoring
type: Opaque
data:
  session_secret: Z0dFWEcyNUk2V1Npa1Z1bVpEaGpYQT09 #(Random secret for session)
---
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-secret
  namespace: redhat-ods-monitoring
  annotations:
    kubernetes.io/service-account.name: rhoai-monitoring-stack-prometheus
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: blackbox
  namespace: redhat-ods-monitoring
data:
  blackbox.yml: |-
    modules:
      http_2xx:
        prober: http
        timeout: 10s
        http:
          valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
          method: GET
          valid_status_codes: [200, 201, 202, 203, 204, 205, 206, 207, 208]
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          tls_config:
            insecure_skip_verify: true
          preferred_ip_protocol: "ip4"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: blackbox-exporter
  name: blackbox-exporter
  namespace: redhat-ods-monitoring
spec:
  ports:
  - name: 9114-tcp
    port: 9114
    protocol: TCP
    targetPort: 9114
  selector:
    deployment: blackbox-exporter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    deployment: blackbox-exporter
  name: blackbox-exporter
  namespace: redhat-ods-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: blackbox-exporter
  template:
    metadata:
      labels:
        deployment: blackbox-exporter
    spec:
      containers:
      - args:
        - -provider=openshift
        - -https-address=:9114
        - -http-address=
        - -email-domain=*
        - -upstream=http://localhost:9115
        - -openshift-service-account=rhoai-monitoring-stack-prometheus
        - '-openshift-sar={"resource": "namespaces", "verb": "get", "name": "redhat-ods-monitoring",
          "namespace": "redhat-ods-monitoring"}'
        - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get",
          "name": "redhat-ods-monitoring", "namespace": "redhat-ods-monitoring"}}'
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -cookie-secret-file=/etc/proxy/secrets/session_secret
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - -client-id=system:serviceaccount:redhat-ods-monitoring:rhoai-monitoring-stack-prometheus
        - -skip-auth-regex=^/metrics
        image: registry.redhat.io/openshift4/ose-oauth-proxy@sha256:4bef31eb993feb6f1096b51b4876c65a6fb1f4401fee97fa4f4542b6b7c9bc46
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: 9114
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: oauth-proxy
        ports:
        - containerPort: 9114
          name: metrics
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: 9114
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/tls/private
          name: prometheus-tls
          readOnly: false
        - mountPath: /etc/proxy/secrets
          name: prometheus-proxy
          readOnly: false
      - args:
        - --log.level=debug
        - --config.file=/tmp/blackbox.yml
        image: quay.io/integreatly/prometheus-blackbox-exporter@sha256:35b9d2c1002201723b7f7a9f54e9406b2ec4b5b0f73d114f47c70e15956103b5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9115
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: blackbox-exporter
        ports:
        - containerPort: 9115
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9115
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
          requests:
            cpu: 50m
            memory: 50Mi
        volumeMounts:
        - mountPath: /tmp
          name: config-volume
      restartPolicy: Always
      serviceAccountName: rhoai-monitoring-stack-prometheus
      volumes:
      - configMap:
          name: blackbox
        name: config-volume
      - name: prometheus-tls
        secret:
          defaultMode: 420
          secretName: prometheus-tls
      - name: prometheus-proxy
        secret:
          defaultMode: 420
          secretName: prometheus-proxy